#!/usr/bin/env python
# encoding: utf-8

from __future__ import division
from __future__ import print_function
from __future__ import absolute_import

import os
import sys
import glob
import multiprocessing
import cStringIO
import re

from astropy.table import Table
from astropy.io import ascii


GAIA_DIR = os.getenv("GAIA_DATA")
GAIA_SOURCE_DIR = os.path.join(GAIA_DIR, "dr1/gaia_source/fits")
GAIA_TGAS_DIR = os.path.join(GAIA_DIR, "dr1/tgas_source/fits")
CSV_SOURCE_DIR = os.path.join(os.getenv("SCRATCH_LUSTRE"), "gaiaSourceCSV")
CSV_TGAS_DIR = os.path.join(os.getenv("SCRATCH_LUSTRE"), "gaiaTgasCSV")


def writeCSV(fitsFile):
    # cant pass out dir using multiprocessing?
    table = Table.read(fitsFile)
    filename = os.path.split(fitsFile)[-1]
    if filename.startswith("TgasSource"):
        OUTPUT_DIR = CSV_TGAS_DIR
    else:
        OUTPUT_DIR = CSV_SOURCE_DIR
    csvfilename = filename.strip("fits") + "csv"
    fullpath = os.path.join(OUTPUT_DIR, csvfilename)
    outStrBuffer = cStringIO.StringIO()
    ascii.write(table, outStrBuffer, format="csv")
    outStr = outStrBuffer.getvalue()
    replNan = re.sub("nan", "NULL", outStr)
    with open(fullpath, "w") as f:
        f.write(replNan)

def writeSourceCSVs():
    allFitsTables = sorted(glob.glob(GAIA_SOURCE_DIR+"/GaiaSource*.fits"))
    p = multiprocessing.Pool(12)
    p.map(writeCSV, allFitsTables)

def writeTgasCSVs():
    allFitsTables = sorted(glob.glob(GAIA_TGAS_DIR+"/TgasSource*.fits"))
    p = multiprocessing.Pool(12)
    p.map(writeCSV, allFitsTables)

if __name__ == "__main__":
    # usage gaia_source2csv tgas | source
    usageStr = "usage: gaia_source2csv tgas | source"
    if not sys.argv[1]:
        print(usageStr)
        return
    catalog = sys.argv[1].lower()
    if catalog not in ["tgas", "source"]:
        print(usageStr)
        return
    if catalog == "tgas":
        writeTgasCSVs()
    else:
        writeSourceCSVs()

